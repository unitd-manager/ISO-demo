{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/ScoreManage/KeyStaffDetails.js","components/ScoreManage/StaffButton.js","components/ScoreManage/Tab.js","views/EditData/ScoreManagementEdit.js","components/CreationModification.js","components/ComponentCard.js","constants/creationdatetime.js","components/ComponentCardV2.js","components/Tender/AttachmentModalV2.js","components/ProjectModal/ViewFileComponentV2.js","../node_modules/react-feather/dist/icons/image.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","KeyStaffDetails","staffeditdetails","handleInputs","useState","customername","setCustomerName","useEffect","api","get","then","res","data","catch","ComponentCard","title","creationModificationDate","md","onChange","value","score","name","comments","review_status","company_id","map","e","company_name","reviewer","StaffButton","applyChanges","backToList","editStaffData","navigate","ComponentCardV2","color","onClick","setTimeout","window","confirm","Tab","toggle","tabs","useSearchParams","searchParams","setSearchParams","id","tab","StaffEdit","setStaffEditDetails","scoreHistory","setScoreHistory","isModalOpen","setIsModalOpen","modalType","setModalType","question_id","currentScore","setCurrentScore","RoomName","setRoomName","fileTypes","setFileTypes","attachmentModal","setAttachmentModal","modelType","pictureData","setDataForPicture","useParams","useNavigate","activeTab","setActiveTab","editStaffById","post","score_management_id","fetchScoreHistory","handleInputChange","target","saveChanges","reload","modification_date","creationdatetime","tabId","bordered","question","questionid","score_management_history_id","xs","width","AttachmentModalV2","moduleId","roomName","altTagData","desc","recordType","mediaType","ViewFileComponentV2","isOpen","CreationModification","details","style","fontSize","created_by","creation_date","modified_by","children","subtitle","moment","format","pStyle","textAlign","marginRight","oStyle","outline","border","file","setFile","handleValue","setHandleValue","uploaded","setUploaded","multiple","handleChange","fiels","arrayOfObj","Object","entries","console","log","types","role","FormData","forEach","ele","append","onUploadProgress","filedata","Math","round","loaded","total","uploadFile","tableStyle","getFile","setGetFile","record_id","room_name","href","rel","fileId","media_id","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","_extends","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Image","forwardRef","_ref","ref","_ref$color","_ref$size","size","rest","React","createElement","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","rx","ry","cx","cy","r","points","propTypes","PropTypes","string","oneOfType","number","displayName"],"mappings":"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","file":"static/js/62.18efc0ad.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport ComponentCard from '../ComponentCard';\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\n\r\n\r\nexport default function KeyStaffDetails({\r\n  staffeditdetails,\r\n  handleInputs,\r\n\r\n}) {\r\n  KeyStaffDetails.propTypes = {\r\n    staffeditdetails: PropTypes.any,\r\n    handleInputs: PropTypes.func,\r\n  \r\n  };\r\n  const [customername, setCustomerName] = useState([]);\r\n\r\n  const getCustomerName = () => {\r\n    api\r\n      .get('/score/getCustomerName')\r\n      .then((res) => {\r\n        setCustomerName(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Company not found', 'info');\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getCustomerName();\r\n \r\n  }, []);\r\n  return (\r\n    <Form>\r\n      <FormGroup>\r\n      <ComponentCard\r\n            title=\"Staff Details\"\r\n            creationModificationDate={staffeditdetails}\r\n          \r\n          > \r\n          <Row>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Score <span className=\"required\"> *</span>\r\n                </Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  onChange={handleInputs}\r\n                  value={staffeditdetails && staffeditdetails.score}\r\n                  name=\"score\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n         \r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>Comments</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  onChange={handleInputs}\r\n                  value={staffeditdetails && staffeditdetails.comments}\r\n                  name=\"comments\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>Status</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"review_status\"\r\n                  onChange={handleInputs}\r\n                  value={staffeditdetails && staffeditdetails.review_status}\r\n                >\r\n                  <option value=\"\">Please Select</option>\r\n                  <option value=\"Current\">Current</option>\r\n                  <option value=\"Archive\">Archive</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>Company</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"company_id\"\r\n                  onChange={handleInputs}\r\n                  value={staffeditdetails && staffeditdetails.company_id}\r\n                >\r\n                  <option value=\"\">Please Select</option>\r\n                  {customername &&\r\n                    customername.map((e) => {\r\n                      return (\r\n                        <option key={e.company_id} value={e.company_id}>\r\n                          {e.company_name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>Reviewer</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  onChange={handleInputs}\r\n                  value={staffeditdetails && staffeditdetails.reviewer}\r\n                  name=\"reviewer\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n           \r\n            \r\n          </Row>\r\n        </ComponentCard>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Button, Form, FormGroup } from 'reactstrap';\r\nimport ComponentCardV2 from '../ComponentCardV2';\r\n\r\n\r\nexport default function StaffButton({\r\n \r\n  applyChanges,\r\n  backToList,\r\n  editStaffData,\r\n  navigate,\r\n}) {\r\n  StaffButton.propTypes = {\r\n   \r\n    applyChanges: PropTypes.func,\r\n    backToList: PropTypes.func,\r\n    editStaffData: PropTypes.func,\r\n    navigate: PropTypes.any,\r\n  };\r\n  return (\r\n    <Form>\r\n      <FormGroup>\r\n        <ComponentCardV2>\r\n          <Row>\r\n            <Col>\r\n              <Button  className='shadow-none'\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  editStaffData();\r\n                  setTimeout(() => {\r\n                    navigate('/ScoreManagement');\r\n                  }, 1100);\r\n                }}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button  className='shadow-none'\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  editStaffData();\r\n                  applyChanges();\r\n                }}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button  className='shadow-none'\r\n                color=\"dark\"\r\n                onClick={() => {\r\n                  if (\r\n                    window.confirm(\r\n                      'Are you sure you want to cancel  \\n  \\n You will lose any changes made',\r\n                    )\r\n                  ) {\r\n                    navigate('/ScoreManagement');\r\n                  } else {\r\n                    applyChanges();\r\n                  }\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button  className='shadow-none'\r\n                color=\"dark\"\r\n                onClick={() => {\r\n                  backToList();\r\n                }}\r\n              >\r\n                Back to List\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </ComponentCardV2>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n}\r\n","import React,{useEffect} from 'react';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nexport default function Tab({ toggle,tabs }) {\r\n  Tab.propTypes = {\r\n    toggle: PropTypes.func,\r\n    tabs: PropTypes.array\r\n  };\r\n\r\n  // for tab refresh navigation #Renuka 31-05-23\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n   toggle(searchParams.get('tab'))\r\n  }, [searchParams.get('tab')]);\r\n  // End for tab refresh navigation #Renuka 31-05-23\r\n  return (\r\n    <Nav tabs>\r\n\r\n      {tabs?.map((e)=>{\r\n        return (\r\n          <NavItem key={e.id}>\r\n            <NavLink\r\n            key={e.id}\r\n              className={e.id === searchParams.get('tab') ? 'active' : ''}\r\n              onClick={() => {\r\n                setSearchParams({tab:e.id});\r\n                toggle(e.id);\r\n              }}\r\n            >\r\n              {e.name}\r\n            </NavLink>\r\n          </NavItem>\r\n        )\r\n      })}\r\n    </Nav>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Button,\r\n  TabPane,\r\n  TabContent,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Label,\r\n  Table,\r\n  Input\r\n} from 'reactstrap';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport '../form-editor/editor.scss';\r\nimport * as Icon from 'react-feather';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport AttachmentModalV2 from '../../components/Tender/AttachmentModalV2';\r\nimport ViewFileComponentV2 from '../../components/ProjectModal/ViewFileComponentV2';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport KeyStaffDetails from '../../components/ScoreManage/KeyStaffDetails';\r\nimport StaffButton from '../../components/ScoreManage/StaffButton';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport Tab from '../../components/ScoreManage/Tab';\r\n\r\nconst StaffEdit = () => {\r\n  // All state variables\r\n  const [staffeditdetails, setStaffEditDetails] = useState('');\r\n  const [scoreHistory, setScoreHistory] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState('add'); // 'add' or 'edit'\r\n  const [currentScore, setCurrentScore] = useState({\r\n    question_id: '',\r\n    title: '',\r\n    review_status: '',\r\n    comments: '',\r\n    reviewer: ''\r\n  });\r\n  const [RoomName, setRoomName] = useState('');\r\n  const [fileTypes, setFileTypes] = useState('');\r\n  const [attachmentModal, setAttachmentModal] = useState(false);\r\n  const [pictureData, setDataForPicture] = useState({\r\n    modelType: '',\r\n  });\r\n\r\n  // Navigation and Parameter Constants\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const tabs = [\r\n    { id: '1', name: 'Score History' },\r\n    { id: '2', name: 'Attachment' },\r\n  ];\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = (tab) => {\r\n    setActiveTab(tab);\r\n  };\r\n\r\n  const [customername, setCustomerName] = useState([]);\r\n\r\n  const getCustomerName = () => {\r\n    api\r\n      .get('/score/getQuestionName')\r\n      .then((res) => {\r\n        setCustomerName(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Company not found', 'info');\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getCustomerName();\r\n\r\n  }, []);\r\n\r\n  // Setting Data in Staff Details\r\n  const handleInputs = (e) => {\r\n    setStaffEditDetails({ ...staffeditdetails, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Setting Picture Data\r\n  const dataForPicture = () => {\r\n    setDataForPicture({\r\n      modelType: 'picture',\r\n    });\r\n  };\r\n\r\n  // Route Change\r\n  const applyChanges = () => { };\r\n  const saveChanges = () => {\r\n    navigate('/ScoreManagement');\r\n    window.location.reload();\r\n  };\r\n  const backToList = () => {\r\n    navigate('/ScoreManagement');\r\n  };\r\n\r\n  // Api call for getting Staff Data By ID\r\n  const editStaffById = () => {\r\n    api\r\n      .post('/score/getScoreManageById', { score_management_id: id })\r\n      .then((res) => {\r\n        setStaffEditDetails(res.data.data[0]);\r\n      })\r\n      .catch(() => {\r\n        message('Staff Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  // Api call for Editing Staff Details\r\n  const editStaffData = () => {\r\n    staffeditdetails.modification_date = creationdatetime;\r\n\r\n    api\r\n      .post('/score/editScore', staffeditdetails)\r\n      .then(() => {\r\n        message('Record edited successfully', 'success');\r\n        editStaffById();\r\n      })\r\n      .catch(() => {\r\n        message('Unable to edit record.', 'error');\r\n      });\r\n  };\r\n\r\n  // Api call for getting Score History Data\r\n  const fetchScoreHistory = () => {\r\n    api\r\n      .post('/score/getScoreHistory', { score_management_id: id })\r\n      .then((res) => {\r\n        setScoreHistory(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Score History Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  // Api call for Adding or Editing Score History\r\n  const handleSaveScore = () => {\r\n    if (modalType === 'add') {\r\n      currentScore.score_management_id = id;\r\n\r\n      api\r\n        .post('/score/addScoreHistory', currentScore)\r\n        .then(() => {\r\n          message('Score added successfully', 'success');\r\n          fetchScoreHistory();\r\n        })\r\n        .catch(() => {\r\n          message('Unable to add score.', 'error');\r\n        });\r\n    } else {\r\n      api\r\n        .post('/score/editScoreHistory', currentScore)\r\n        .then(() => {\r\n          message('Score edited successfully', 'success');\r\n          fetchScoreHistory();\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit score.', 'error');\r\n        });\r\n    }\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  // Api call for Deleting Score History\r\n  const handleDeleteScore = (questionid) => {\r\n    api\r\n      .post('/score/deleteScoreHistory', { score_management_history_id: questionid })\r\n      .then(() => {\r\n        message('Score deleted successfully', 'success');\r\n        fetchScoreHistory();\r\n      })\r\n      .catch(() => {\r\n        message('Unable to delete score.', 'error');\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentScore({ ...currentScore, [name]: value });\r\n  };\r\n  useEffect(() => {\r\n    editStaffById();\r\n    fetchScoreHistory();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumbs />\r\n      <ToastContainer />\r\n\r\n      {/* Staff Edit Buttons */}\r\n      <StaffButton\r\n        navigate={navigate}\r\n        saveChanges={saveChanges}\r\n        applyChanges={applyChanges}\r\n        backToList={backToList}\r\n        editStaffData={editStaffData}\r\n        id={id}\r\n      ></StaffButton>\r\n\r\n      {/* KeyStaffDetails */}\r\n      <BreadCrumbs heading={staffeditdetails && staffeditdetails.score_management_id} />\r\n      <KeyStaffDetails\r\n        staffeditdetails={staffeditdetails}\r\n        handleInputs={handleInputs}\r\n      ></KeyStaffDetails>\r\n\r\n      {/* Picture Attachment */}\r\n      <Form>\r\n        <FormGroup>\r\n          {/* Nav tab */}\r\n          <ComponentCard title=\"More Details\">\r\n            <ToastContainer></ToastContainer>\r\n            <Tab toggle={toggle} tabs={tabs} />\r\n\r\n            <TabContent className=\"p-4\" activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setModalType('add');\r\n                    setCurrentScore({\r\n                      score_management_id: id,\r\n                      question_id: '',\r\n                      title: '',\r\n                      review_status: '',\r\n                      comments: '',\r\n                      reviewer: ''\r\n                    });\r\n                    setIsModalOpen(true);\r\n                  }}\r\n                >\r\n                  Add Score\r\n                </Button>\r\n                <Table bordered>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Question ID</th>\r\n                      <th>Title</th>\r\n                      <th>Review Status</th>\r\n                      <th>Comments</th>\r\n                      <th>Reviewer</th>\r\n                      <th>Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {scoreHistory.map((score) => (\r\n                      <tr key={score.score_management_history_id}>\r\n                        <td>{score.question}</td>\r\n                        <td>{score.title}</td>\r\n                        <td>{score.review_status}</td>\r\n                        <td>{score.comments}</td>\r\n                        <td>{score.reviewer}</td>\r\n                        <td>\r\n                          <Button\r\n                            color=\"secondary\"\r\n                            onClick={() => {\r\n                              setModalType('edit');\r\n                              setCurrentScore(score);\r\n                              setIsModalOpen(true);\r\n                            }}\r\n                          >\r\n                            Edit\r\n                          </Button>\r\n                        </td><td>\r\n                          <Button\r\n                            color=\"danger\"\r\n                            onClick={() => handleDeleteScore(score.score_management_history_id)}\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </TabPane>\r\n\r\n              <TabPane tabId=\"2\">\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col xs=\"12\" md=\"3\" className=\"mb-3\">\r\n                        <Button\r\n                          className=\"shadow-none\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            setRoomName('StaffPic');\r\n                            setFileTypes(['JPG', 'JPEG', 'PNG', 'GIF']);\r\n                            dataForPicture();\r\n                            setAttachmentModal(true);\r\n                          }}\r\n                        >\r\n                          <Icon.Image className=\"rounded-circle\" width=\"20\" />\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                    <AttachmentModalV2\r\n                      moduleId={id}\r\n                      attachmentModal={attachmentModal}\r\n                      setAttachmentModal={setAttachmentModal}\r\n                      roomName={RoomName}\r\n                      fileTypes={fileTypes}\r\n                      altTagData=\"Staff Data\"\r\n                      desc=\"Staff Data\"\r\n                      recordType=\"Picture\"\r\n                      mediaType={pictureData.modelType}\r\n                    />\r\n                    <ViewFileComponentV2 moduleId={id} roomName=\"StaffPic\" recordType=\"Picture\" />\r\n                  </FormGroup>\r\n                </Form>\r\n              </TabPane>\r\n            </TabContent>\r\n          </ComponentCard>\r\n        </FormGroup>\r\n      </Form>\r\n\r\n      {/* Add/Edit Modal */}\r\n      <Modal isOpen={isModalOpen} toggle={() => setIsModalOpen(!isModalOpen)}>\r\n        <ModalHeader toggle={() => setIsModalOpen(!isModalOpen)}>\r\n          {modalType === 'add' ? 'Add Score' : 'Edit Score'}\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Label>Question ID</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"question_id\"\r\n                onChange={handleInputChange}\r\n                value={currentScore.question_id}\r\n              // disabled={modalType === 'edit'}\r\n              >\r\n                <option value=\"\">Please Select</option>\r\n                {customername &&\r\n                  customername.map((e) => {\r\n                    return (\r\n                      <option key={e.question_id} value={e.question_id}>\r\n                        {e.question}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Title</Label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={currentScore.title}\r\n                onChange={handleInputChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Review Status</Label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"review_status\"\r\n                value={currentScore.review_status}\r\n                onChange={handleInputChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Comments</Label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"comments\"\r\n                value={currentScore.comments}\r\n                onChange={handleInputChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Reviewer</Label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"reviewer\"\r\n                value={currentScore.reviewer}\r\n                onChange={handleInputChange}\r\n              />\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={handleSaveScore}>\r\n            Save\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={() => setIsModalOpen(false)}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StaffEdit;\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n              <span style={{ fontSize: '0.7em' }}> Creation: {details && details.created_by} {details && details.creation_date}</span>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n              <span style={{ fontSize: '0.7em' }}> Modified: {details && details.modified_by} {details && details.modification_date}</span>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","import { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pStyle = {\r\n  textAlign: 'right',\r\n  marginRight: '10px',\r\n};\r\nconst oStyle={\r\noutline:'none',\r\nborder:'none'\r\n};\r\n\r\nconst ComponentCardV2 = ({ children }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CardBody style={pStyle} >\r\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCardV2.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ComponentCardV2;\r\n","import React,{useState} from 'react'\r\nimport { FormGroup,Button,Modal,ModalHeader,ModalBody, ModalFooter } from 'reactstrap';\r\nimport PropTypes from 'prop-types'\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\n\r\nconst AttachmentModalV2 = ({attachmentModal,setAttachmentModal,moduleId,roomName,fileTypes,altTagData, desc}) => {\r\n\r\n    AttachmentModalV2.propTypes = {\r\n        attachmentModal: PropTypes.bool,\r\n        setAttachmentModal: PropTypes.func,\r\n        moduleId:PropTypes.string,\r\n        roomName:PropTypes.string,\r\n        altTagData:PropTypes.string,\r\n        desc:PropTypes.string,\r\n        fileTypes:PropTypes.any,\r\n      }\r\n      \r\n        const [file, setFile] = useState([]);\r\n        const [ handleValue, setHandleValue ] = useState()\r\n       const[uploaded, setUploaded]=useState(null)\r\n\r\n        const handleChange = (fiels) => {\r\n          \r\n            const arrayOfObj = Object.entries(fiels).map((e) => ( e[1]  ));\r\n\r\n            setFile(fiels);\r\n            setHandleValue(arrayOfObj);\r\n            console.log(fiels)\r\n        };\r\n\r\n        const uploadFile = () =>{\r\n            \r\n            if(file){\r\n\r\n               // getFiles();\r\n            \r\n          \r\n                const data = new FormData() \r\n                const arrayOfObj = Object.entries(file).map((e) => (  e[1] ));\r\n\r\n                arrayOfObj.forEach((ele) => {\r\n                    data.append(`files`, ele);\r\n                  });\r\n                //data.append('file', file)\r\n                data.append('record_id', moduleId)\r\n                data.append('room_name', roomName)\r\n                data.append('alt_tag_data', altTagData)\r\n                data.append('description', desc)\r\n\r\n                api.post('/file/uploadFiles',data,{onUploadProgress:(filedata)=>{\r\n                    console.log( Math.round((filedata.loaded/filedata.total)*100))\r\n                    setUploaded( Math.round((filedata.loaded/filedata.total)*100))\r\n                   \r\n                }}).then(()=>{\r\n     \r\n                    // setAttachmentModal(false)\r\n                    message('Files Uploaded Successfully','success')\r\n                    \r\n                    setTimeout(() => {\r\n                        window.location.reload()\r\n                    }, 400);\r\n                }).catch(()=>{\r\n                    setAttachmentModal(false)\r\n                    message('Unable to upload File','error')\r\n                    // setTimeout(() => {\r\n                    //     window.location.reload()\r\n                    // }, 400);\r\n                })\r\n            }else{\r\n                message('No files selected','info')\r\n            }\r\n        }\r\n      \r\n    \r\n  return (\r\n\r\n    \r\n    <div>\r\n        \r\n        <Modal isOpen={attachmentModal} >\r\n            <ModalHeader>Upload Media</ModalHeader>\r\n            <ModalBody>\r\n                <FormGroup>\r\n                  \r\n                <FileUploader\r\n                        multiple\r\n                        handleChange={handleChange}\r\n                        name=\"file\"\r\n                        types={fileTypes}\r\n                    />\r\n                    \r\n\r\n                    {handleValue ? (\r\n                        handleValue.map((e) => (\r\n                        <div>\r\n                            <span> Name: {e.name} </span>\r\n                        </div>\r\n                        ))\r\n                    ) : (\r\n                        <span>No file selected</span>\r\n                    )}\r\n\r\n                </FormGroup>\r\n            { uploaded &&  <div className='progress mt-2'>\r\n                    <div className=\"progress-bar h-4\" role='progressbar'\r\n                    aria-valuenow={uploaded}\r\n                    aria-valuemin='0'\r\n                    aria-valuemax='100'\r\n                    style={{width:`${uploaded}%`}}>\r\n                      {`${uploaded}% uploaded`}\r\n                    </div>\r\n                </div>}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" className='shadow-none' onClick={()=>{\r\n                    uploadFile()\r\n                }}>Upload</Button>\r\n                <Button color=\"secondary\" className='shadow-none' onClick={()=>{ window.location.reload();setAttachmentModal(false) }}>Cancel</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AttachmentModalV2","import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport PropTypes from 'prop-types';\r\nimport * as Icon from 'react-feather';\r\nimport message from '../Message';\r\nimport api from '../../constants/api';\r\n\r\nfunction ViewFileComponentV2({ moduleId, roomName }) {\r\n  ViewFileComponentV2.propTypes = {\r\n    moduleId: PropTypes.string,\r\n    roomName: PropTypes.string,\r\n  };\r\n\r\n  const tableStyle = {};\r\n\r\n  const [getFile, setGetFile] = useState(null);\r\n\r\n  const getFiles = () => {\r\n    api.post('/file/getListOfFiles', { record_id: moduleId, room_name: roomName }).then((res) => {\r\n      setGetFile(res.data);\r\n    });\r\n  };\r\n\r\n  const deleteFile = (fileId) => {\r\n    Swal.fire({\r\n      title: `Are you sure?`,\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        api\r\n          .post('/file/deleteFile', { media_id: fileId })\r\n          .then((res) => {\r\n            console.log(res);\r\n            Swal.fire('Deleted!', 'Media has been deleted.', 'success');\r\n            //setViewLineModal(false)\r\n\r\n            window.location.reload();\r\n          })\r\n          .catch(() => {\r\n            message('Unable to Delete Media', 'info');\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFiles();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table style={tableStyle}>\r\n        <thead>\r\n          <tr style={tableStyle}>\r\n            <th style={tableStyle}>\r\n             File Name\r\n            </th>\r\n            <th width=\"5%\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {getFile ? (\r\n          getFile.map((res) => {\r\n            return (\r\n                <tr key={res.media_id}>\r\n                  <td style={tableStyle}>\r\n                      <a\r\n                        href={`http://43.228.126.245/united-ecomm-api/storage/uploads/${res.name}`}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                      >\r\n                        {res.name}\r\n                      </a>\r\n                  </td>\r\n                  <td style={tableStyle}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn shadow-none\"\r\n                      onClick={() => {\r\n                        deleteFile(res.media_id);\r\n                      }}\r\n                    >\r\n                      <Icon.Trash2 />{' '}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n            );\r\n          })\r\n        ) : (\r\n          <tr><td><p>no files uploaded yet</p></td></tr>\r\n        )}\r\n        </tbody>\r\n        \r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewFileComponentV2;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Image = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"rect\", {\n    x: \"3\",\n    y: \"3\",\n    width: \"18\",\n    height: \"18\",\n    rx: \"2\",\n    ry: \"2\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"8.5\",\n    cy: \"8.5\",\n    r: \"1.5\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"21 15 16 10 5 21\"\n  }));\n});\nImage.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nImage.displayName = 'Image';\nexport default Image;"],"sourceRoot":""}