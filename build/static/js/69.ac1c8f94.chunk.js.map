{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js","views/EditData/CustomerEdit.js","constants/creationdatetime.js","components/ComponentCardV2.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","title","style","fontSize","created_by","creation_date","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate","ContentUpdate","useState","contentDetails","setContentDetails","allcountries","setAllCountries","id","useParams","navigate","useNavigate","handleInputs","e","target","name","value","editContentData","creationdatetime","console","log","api","post","then","catch","useEffect","company_id","res","data","get","color","onClick","setTimeout","md","onChange","company_code","disabled","company_name","phone","email","address_street","address_state","address_country","defaultValue","map","country","country_code","moment","format","pStyle","textAlign","marginRight","oStyle","outline","border","ComponentCardV2"],"mappings":"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","file":"static/js/69.ac1c8f94.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n              <span style={{ fontSize: '0.7em' }}> Creation: {details && details.created_by} {details && details.creation_date}</span>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n              <span style={{ fontSize: '0.7em' }}> Modified: {details && details.modified_by} {details && details.modification_date}</span>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Form, FormGroup, Button, Label, Input } from 'reactstrap';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport '../form-editor/editor.scss';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCardV2 from '../../components/ComponentCardV2';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\n\r\nconst ContentUpdate = () => {\r\n  // All state variables\r\n  const [contentDetails, setContentDetails] = useState();\r\n  const [allcountries, setAllCountries] = useState();\r\n\r\n  // Navigation and Parameter Constants\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  //Setting data in contentDetails\r\n  const handleInputs = (e) => {\r\n    setContentDetails({ ...contentDetails, [e.target.name]: e.target.value });\r\n  };\r\n  //setting data in Description Modal contentDetails\r\n  const getAllCountries = () => {\r\n    api\r\n      .get('/contact/getCountry')\r\n      .then((res) => {\r\n        setAllCountries(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        //message('Country Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  // Get content data By content id\r\n  const getContentById = () => {\r\n    api\r\n      .post('/contact/getCompanyByCompanyId', { company_id: id })\r\n      .then((res) => {\r\n        setContentDetails(res.data.data[0]);\r\n      })\r\n      .catch(() => {\r\n        message('Content Data Not Found', 'info');\r\n      });\r\n  };\r\n  //Edit Content\r\n  const editContentData = () => {\r\n    contentDetails.modification_date = creationdatetime;\r\n    console.log(contentDetails);\r\n    \r\n      api\r\n        .post('/contact/editCompany', contentDetails)\r\n        .then(() => {\r\n          message('Record edited successfully', 'success');\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    \r\n  };\r\n\r\n  // getting data from Category\r\n \r\n\r\n  useEffect(() => {\r\n    getContentById();\r\n    getAllCountries();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumbs heading={contentDetails && contentDetails.title} />\r\n      <Form>\r\n        <FormGroup>\r\n          <ComponentCardV2>\r\n            <Row>\r\n              <Col>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    editContentData();\r\n                    setTimeout(() => {\r\n                      navigate('/Customer');\r\n                    }, 1100);\r\n                  }}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    editContentData();\r\n                  }}\r\n                >\r\n                  Apply\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  color=\"dark\"\r\n                  onClick={() => {\r\n                    navigate('/Customer');\r\n                    console.log('back to list');\r\n                  }}\r\n                >\r\n                  Back to List\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </ComponentCardV2>\r\n          {/* Content Details Form */}\r\n          <ComponentCard title=\"Customer details\" creationModificationDate={contentDetails}>\r\n            <ToastContainer></ToastContainer>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label> Customer Id </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.company_code}\r\n                    name=\"company_code\"\r\n                    disabled\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                <Label>Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.company_name}\r\n                    name=\"company_name\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  {/* Category title from Category table */}\r\n                  <Label>Mobile</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.phone}\r\n                    name=\"phone\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  {/* Category title from Category table */}\r\n                  <Label>Email</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.email}\r\n                    name=\"email\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  {/* Category title from Category table */}\r\n                  <Label>Street</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.address_street}\r\n                    name=\"address_street\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                <Label>State</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.address_state}\r\n                    name=\"address_state\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n              <FormGroup>\r\n              <Label>Country</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"address_country\"\r\n                onChange={handleInputs}\r\n                value={contentDetails && contentDetails.address_country}\r\n              >\r\n                <option defaultValue=\"selected\" value=\"\">\r\n                  Please Select\r\n                </option>\r\n                {allcountries &&\r\n                  allcountries.map((country) => (\r\n                    <option key={country.country_code} value={country.country_code}>\r\n                      {country.name}\r\n                    </option>\r\n                  ))}\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n                 \r\n            </Row>\r\n          </ComponentCard>\r\n          </FormGroup>\r\n      </Form>\r\n     \r\n     \r\n    </>\r\n  );\r\n};\r\nexport default ContentUpdate;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","import { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pStyle = {\r\n  textAlign: 'right',\r\n  marginRight: '10px',\r\n};\r\nconst oStyle={\r\noutline:'none',\r\nborder:'none'\r\n};\r\n\r\nconst ComponentCardV2 = ({ children }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CardBody style={pStyle} >\r\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCardV2.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ComponentCardV2;\r\n"],"sourceRoot":""}