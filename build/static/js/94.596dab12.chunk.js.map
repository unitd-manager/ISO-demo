{"version":3,"sources":["components/Message.js","views/auth/RegisterFormik.js","assets/images/logos/logo.png","layouts/logo/AuthLogo.js","assets/images/bg/login-bgleft.svg","assets/images/bg/login-bg-right.svg"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","RegisterFormik","validationSchema","Yup","shape","UserName","required","email","password","min","confirmPassword","oneOf","acceptTerms","className","fluid","lg","to","initialValues","onSubmit","fields","value","loginApi","post","then","res","console","log","data","catch","alert","JSON","stringify","render","errors","touched","htmlFor","name","component","inline","id","color","AuthLogo","src","MainLogo","alt","_path","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLoginBgleft","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","d","ForwardRef","_path2","SvgLoginBgRight","fillOpacity"],"mappings":"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","file":"static/js/94.596dab12.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { Button, Label, FormGroup, Container, Row, Col, Card, CardBody } from 'reactstrap';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Link } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport AuthLogo from \"../../layouts/logo/AuthLogo\";\r\nimport loginApi from '../../constants/api';\r\nimport { ReactComponent as LeftBg } from '../../assets/images/bg/login-bgleft.svg';\r\nimport { ReactComponent as RightBg } from '../../assets/images/bg/login-bg-right.svg';\r\nimport message from '../../components/Message';\r\n\r\nconst RegisterFormik = () => {\r\n\r\n  const initialValues = {\r\n    UserName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    acceptTerms: false,\r\n  };\r\n  //const navigate = useNavigate();\r\n  \r\n  const validationSchema = Yup.object().shape({\r\n    UserName: Yup.string().required('UserName is required'),\r\n    email: Yup.string().email('Email is invalid').required('Email is required'),\r\n    password: Yup.string()\r\n      .min(6, 'Password must be at least 6 characters')\r\n      .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n      .required('Confirm Password is required'),\r\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Terms & Conditions is required'),\r\n  });\r\n\r\n  const signup = (value) => {\r\n    \r\n     \r\n    loginApi\r\n          .post(\"/api/register\", value)\r\n          .then((res) => {\r\n            console.log(res.data.data);\r\n            message('Account is Registered successfully', 'success');\r\n            // addToast(\"Registered Successfully\", {\r\n            //   appearance: \"success\",\r\n            //   autoDismiss: true,\r\n            // });\r\n            // setTimeout(() => {\r\n            //   // Pass the contact ID as state to the next page\r\n            //   navigate({\r\n            //     pathname: `/register-verification/${value.email}`,\r\n            //    state: { otpNo: value.otp_no },\r\n             \r\n            //   });\r\n            // }, 1000);\r\n           \r\n            // console.log('contact',res.data.data.contact_id);\r\n            \r\n          })\r\n          .catch(() => {\r\n            message('Unable to register', 'error');\r\n            // addToast(\"This Email is already Registered\", {\r\n            //   appearance: \"error\",\r\n            //   autoDismiss: true,\r\n            // });\r\n          });\r\n      \r\n  };\r\n\r\n  return (\r\n    <div className=\"loginBox\">\r\n      <ToastContainer></ToastContainer>\r\n      <LeftBg className=\"position-absolute left bottom-0\" />\r\n      <RightBg className=\"position-absolute end-0 top\" />\r\n      <Container fluid className=\"h-100\">\r\n        <Row className=\"justify-content-center align-items-center h-100\">\r\n          <Col lg=\"12\" className=\"loginContainer\">\r\n            <AuthLogo />\r\n            <Card>\r\n              <CardBody className=\"p-4 m-1\">\r\n                <h5 className=\"mb-0\">Register</h5>\r\n                <small className=\"pb-4 d-block\">\r\n                  Already have an account? <Link to=\"/login\">Login</Link>\r\n                </small>\r\n                <Formik\r\n                  initialValues={initialValues}\r\n                  validationSchema={validationSchema}\r\n                  onSubmit={(fields) => {\r\n                    signup(fields);\r\n                    // eslint-disable-next-line no-alert\r\n                    alert(`SUCCESS!! :-)\\n\\n${JSON.stringify(fields, null, 4)}`);\r\n                  }}\r\n                  render={({ errors, touched }) => (\r\n                    <Form>\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"firstName\">User Name</Label>\r\n                        <Field\r\n                          name=\"UserName\"\r\n                          type=\"text\"\r\n                          className={`form-control ${\r\n                            errors.UserName && touched.UserName ? ' is-invalid' : ''\r\n                          }`}\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"UserName\"\r\n                          component=\"div\"\r\n                          className=\"invalid-feedback\"\r\n                        />\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"email\">Email</Label>\r\n                        <Field\r\n                          name=\"email\"\r\n                          type=\"text\"\r\n                          className={`form-control${\r\n                            errors.email && touched.email ? ' is-invalid' : ''\r\n                          }`}\r\n                          \r\n                        />\r\n                        <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"password\">Password</Label>\r\n                        <Field\r\n                          name=\"password\"\r\n                          type=\"password\"\r\n                          className={`form-control${\r\n                            errors.password && touched.password ? ' is-invalid' : ''\r\n                          }`}\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"password\"\r\n                          component=\"div\"\r\n                          className=\"invalid-feedback\"\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"confirmPassword\">Confirm Password</Label>\r\n                        <Field\r\n                          name=\"confirmPassword\"\r\n                          type=\"password\"\r\n                          className={`form-control${\r\n                            errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : ''\r\n                          }`}\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"confirmPassword\"\r\n                          component=\"div\"\r\n                          className=\"invalid-feedback\"\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup inline className=\"form-check\">\r\n                        <Field\r\n                          type=\"checkbox\"\r\n                          name=\"acceptTerms\"\r\n                          id=\"acceptTerms\"\r\n                          className={`form-check-input ${\r\n                            errors.acceptTerms && touched.acceptTerms ? ' is-invalid' : ''\r\n                          }`}\r\n                        />\r\n                        <Label htmlFor=\"acceptTerms\" className=\"form-check-label\">\r\n                          Accept Terms & Conditions\r\n                        </Label>\r\n                        <ErrorMessage\r\n                          name=\"acceptTerms\"\r\n                          component=\"div\"\r\n                          className=\"invalid-feedback\"\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Button type=\"submit\" color=\"primary\" className=\"me-2\">\r\n                          Register\r\n                        </Button>\r\n                        <Button type=\"reset\" color=\"secondary\">\r\n                          Reset\r\n                        </Button>\r\n                      </FormGroup>\r\n                    </Form>\r\n                  )}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterFormik;\r\n","export default __webpack_public_path__ + \"static/media/logo.b8526821.png\";","import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport  MainLogo from '../../assets/images/logos/logo.png';\r\n\r\nconst AuthLogo = () => {\r\n  return (\r\n    <Link to=\"/\" className=\"d-flex align-items-center gap-2\">\r\n    <img src={MainLogo} alt=\"Logo\" className='w-100' />\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default AuthLogo;","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLoginBgleft(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 376,\n    height: 317,\n    viewBox: \"0 0 376 317\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M98 59.596C70 -2.00401 21 -4.07068 0 2.59599V316.596L375 315.596C377.4 234.796 297 180.263 257 165.596C215.667 155.929 126 121.196 98 59.596Z\",\n    fill: \"#2B87F3\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoginBgleft);\nexport default __webpack_public_path__ + \"static/media/login-bgleft.86cfa896.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLoginBgRight(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 235,\n    height: 255,\n    viewBox: \"0 0 235 255\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M68.0998 80.8352C29.568 58.8255 50.7474 26.3993 66.1536 12.9374L221.331 57.3035L173.743 227.335C119.588 252.59 90.715 235.279 83.0476 223.467C77.2742 209.877 90.3539 183.104 97.6153 171.416C117.578 148.566 120.185 122.853 118.994 112.853C112.554 93.0899 82.3813 83.2732 68.0998 80.8352Z\",\n    fill: \"#62CFF1\",\n    fillOpacity: 0.5\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M88 72C43.2 60 55.3333 19 67 0L235 1V197C187.8 240.2 154 230.333 143 220C133.4 207.2 139 174.667 143 160C156.6 129.6 152 101.333 148 91C136 71.8 103 70.3333 88 72Z\",\n    fill: \"#62CFF1\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoginBgRight);\nexport default __webpack_public_path__ + \"static/media/login-bg-right.8db5a9fe.svg\";\nexport { ForwardRef as ReactComponent };"],"sourceRoot":""}