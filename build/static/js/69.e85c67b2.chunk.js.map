{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js","views/EditData/GapAnalysisEdit.js","constants/creationdatetime.js","components/ComponentCardV2.js","components/Tender/AttachmentModalV2.js","components/ProjectModal/ViewFileComponentV2.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","title","style","fontSize","created_by","creation_date","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate","ContentUpdate","useState","code","contentDetails","setContentDetails","attachmentModal","setAttachmentModal","categoryLinked","setCategoryLinked","categoryLinked2","setCategoryLinked2","categoryLinked3","setCategoryLinked3","categoryLinked4","setCategoryLinked4","modelType","attachmentData","setDataForAttachment","id","useParams","navigate","useNavigate","loggedInuser","useContext","AppContext","activeTab","setActiveTab","getCategory2","codeId","console","log","api","post","then","res","data","catch","getCategory3","getCategory4","editContentData","description1","creationdatetime","first_name","handleInputs","e","htmlString","target","name","value","numericValue","Number","selectedOption","find","option","valuelist_id","DOMParser","parseFromString","body","textContent","useEffect","selectedTask","get","gap_analysis_id","color","onClick","setTimeout","md","onChange","defaultValue","map","description2","description3","description4","defaultChecked","gap","indicate_action","requirements_implemented","document_id","document_description","version","release_date","assessed","acceptable","remarks","onsite_assessed","onsite_acceptable","onsite_remarks","tabs","tab","tabId","xs","moduleId","roomName","altTagData","desc","moment","format","pStyle","textAlign","marginRight","oStyle","outline","border","ComponentCardV2","AttachmentModalV2","quesId","fileTypes","file","setFile","handleValue","setHandleValue","uploaded","setUploaded","isOpen","multiple","handleChange","files","arrayOfObj","Object","entries","types","role","width","FormData","forEach","ele","append","onUploadProgress","filedata","Math","round","loaded","total","window","reload","ViewFileComponentV2","updateFile","tableStyle","getFile","setGetFile","getFiles","record_id","sub_category_id","room_name","href","rel","fileId","media_id","prevFiles","filter"],"mappings":"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","file":"static/js/69.e85c67b2.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n              <span style={{ fontSize: '0.7em' }}> Creation: {details && details.created_by} {details && details.creation_date}</span>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n              <span style={{ fontSize: '0.7em' }}> Modified: {details && details.modified_by} {details && details.modification_date}</span>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Row, Col, Form, FormGroup, Button, Label, Input, NavItem, NavLink, TabPane, TabContent, Nav } from 'reactstrap';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport '../form-editor/editor.scss';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport AttachmentModalV2 from '../../components/Tender/AttachmentModalV2';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport ComponentCardV2 from '../../components/ComponentCardV2';\r\nimport ViewFileComponentV2 from '../../components/ProjectModal/ViewFileComponentV2';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\n\r\nimport AppContext from '../../context/AppContext';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\n\r\nconst ContentUpdate = () => {\r\n  // All state variables\r\n  const [contentDetails, setContentDetails] = useState({code:''});\r\n  const [attachmentModal, setAttachmentModal] = useState(false);\r\n  const [categoryLinked, setCategoryLinked] = useState();\r\n  const [categoryLinked2, setCategoryLinked2] = useState();\r\n  const [categoryLinked3, setCategoryLinked3] = useState();\r\n  const [categoryLinked4, setCategoryLinked4] = useState();\r\n  const [attachmentData, setDataForAttachment] = useState({\r\n    modelType: '',\r\n  });\r\n \r\n  const stripHtmlTags = (htmlString) => {\r\n    const doc = new DOMParser().parseFromString(htmlString, 'text/html');\r\n    return doc.body.textContent || '';\r\n  };\r\n  // Navigation and Parameter Constants\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { loggedInuser } = useContext(AppContext);\r\n  const [activeTab, setActiveTab] = useState('1');\r\n \r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  // Get content data By content id\r\n  const getContentById = () => {\r\n    api\r\n      .post('/GapAnalysis/getIsoCodeById', { gap_analysis_id: id })\r\n      .then((res) => {\r\n        setContentDetails(res.data.data[0]);\r\n      })\r\n      .catch(() => {\r\n        message('Content Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n    // getting data from Category\r\n    const getCategory = () => {\r\n      api.get('/GapAnalysis/getISOValueList')\r\n      .then((res) => {\r\n        setCategoryLinked(res.data.data);\r\n      });\r\n    };\r\n\r\n    const getCategory2 = (codeId) => {\r\n      console.log(\"Fetching data for code:\", codeId);\r\n      api.post('/GapAnalysis/getISOValueList2', { code: codeId })\r\n        .then((res) => {\r\n          setCategoryLinked2(res.data.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching data for description2:', error);\r\n        });\r\n    };\r\n    \r\n\r\n    const getCategory3 = (codeId) => {\r\n      api.post('/GapAnalysis/getISOValueList3', { code: codeId })\r\n      .then((res) => {\r\n        setCategoryLinked3(res.data.data);\r\n      });\r\n    };\r\n\r\n    const getCategory4 = (codeId) => {\r\n      api.post('/GapAnalysis/getISOValueList4', { code: codeId })\r\n      .then((res) => {\r\n        setCategoryLinked4(res.data.data);\r\n      });\r\n    };\r\n  //Edit Content\r\n  const editContentData = () => {\r\n    console.log(contentDetails);\r\n    if (\r\n      contentDetails.description1 !== '' \r\n    \r\n    )\r\n  \r\n    {\r\n      contentDetails.modification_date = creationdatetime;\r\n      contentDetails.modified_by = loggedInuser.first_name;\r\n      api\r\n        .post('/GapAnalysis/editISOCode', contentDetails)\r\n        .then(() => {\r\n          message('Record edited successfully', 'success');\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields', 'warning');\r\n    }\r\n  };\r\n\r\n  const handleInputs = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log('2222222):', name,value); // Log the numeric value\r\n    if (name === 'description1') {\r\n      // Convert value to a number if needed\r\n      const numericValue = Number(value);\r\n      console.log('Dropdown Value (numeric):', numericValue); // Log the numeric value\r\n      const selectedOption = categoryLinked.find((option) => option.valuelist_id === numericValue);\r\n      console.log('Selected Option:', selectedOption); // Log the selected option\r\n      const code = selectedOption ? selectedOption.code : '';\r\n      console.log(\"Code to fetch:\", code); // Log code to fetch\r\n      if (code) {\r\n        getCategory2(code);\r\n      } else {\r\n        console.log('No code to fetch.');\r\n      }\r\n    }\r\n    if (name === 'description2') {\r\n      // Convert value to a number if needed\r\n      const numericValue = Number(value);\r\n      console.log('Dropdown Value (numeric):', numericValue); // Log the numeric value\r\n      const selectedOption = categoryLinked2.find((option) => option.valuelist_id === numericValue);\r\n      console.log('Selected Option1:', selectedOption); // Log the selected option\r\n      const code = selectedOption ? selectedOption.code : '';\r\n      console.log(\"Code to fetch1:\", code); // Log code to fetch\r\n      if (code) {\r\n        getCategory3(code);\r\n      } else {\r\n        console.log('No code to fetch.');\r\n      }\r\n    }\r\n    if (name === 'description3') {\r\n      // Convert value to a number if needed\r\n      const numericValue = Number(value);\r\n      console.log('Dropdown Value (numeric):', numericValue); // Log the numeric value\r\n      const selectedOption = categoryLinked3.find((option) => option.valuelist_id === numericValue);\r\n      console.log('Selected Option:', selectedOption); // Log the selected option\r\n      const code = selectedOption ? selectedOption.code : '';\r\n      console.log(\"Code to fetch:\", code); // Log code to fetch\r\n      if (code) {\r\n        getCategory4(code);\r\n      } else {\r\n        console.log('No code to fetch.');\r\n      }\r\n    }\r\n    setContentDetails({ ...contentDetails, [name]: stripHtmlTags(value) });\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    if (contentDetails&&contentDetails.code) {\r\n      // Use taskdetails.code directly to get the selected project ID\r\n      const selectedTask = contentDetails&&contentDetails.code;\r\n      getCategory2(selectedTask);\r\n    }\r\n  }, [contentDetails&&contentDetails.code]);\r\n  useEffect(() => {\r\n    if (contentDetails&&contentDetails.code) {\r\n      // Use taskdetails.code directly to get the selected project ID\r\n      const selectedTask = contentDetails&&contentDetails.code;\r\n      getCategory3(selectedTask);\r\n    }\r\n  }, [contentDetails&&contentDetails.code]);\r\n  useEffect(() => {\r\n    if (contentDetails&&contentDetails.code) {\r\n      // Use taskdetails.code directly to get the selected project ID\r\n      const selectedTask = contentDetails&&contentDetails.code;\r\n      getCategory4(selectedTask);\r\n    }\r\n  }, [contentDetails&&contentDetails.code]);\r\n\r\n  //Attachments\r\n  const dataForAttachment = () => {\r\n    setDataForAttachment({\r\n      modelType: 'attachment',\r\n    });\r\n    console.log('inside DataForAttachment');\r\n  };\r\n\r\n  useEffect(() => {\r\n  getCategory();\r\n \r\n    getContentById();\r\n    \r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumbs heading={contentDetails && contentDetails.title} />\r\n      <Form>\r\n        <FormGroup>\r\n          <ComponentCardV2>\r\n            <Row>\r\n              <Col>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    editContentData();\r\n                    setTimeout(() => {\r\n                      navigate('/GapAnalysis');\r\n                    }, 1100);\r\n                  }}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    editContentData();\r\n                  }}\r\n                >\r\n                  Apply\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  color=\"dark\"\r\n                  onClick={() => {\r\n                    navigate('/GapAnalysis');\r\n                    console.log('back to list');\r\n                  }}\r\n                >\r\n                  Back to List\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </ComponentCardV2>\r\n          {/* Content Details Form */}\r\n          <ComponentCard title=\"Gap Analysis Details\" creationModificationDate={contentDetails}>\r\n            <ToastContainer></ToastContainer>\r\n            <ComponentCard title=\"Clause Assesment\" >\r\n            <Row>\r\n             \r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label> Description </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.description1}\r\n                    name=\"description1\"\r\n                  >\r\n                    <option defaultValue=\"selected\">Please Select</option>\r\n                    {categoryLinked &&\r\n                      categoryLinked.map((e) => {\r\n                        return (\r\n                          <option key={e.valuelist_id} value={e.valuelist_id}>\r\n                            {e.value}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label> Description 2 </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.description2}\r\n                    name=\"description2\"\r\n                  >\r\n                    <option defaultValue=\"selected\">Please Select</option>\r\n                    {categoryLinked2 &&\r\n                      categoryLinked2.map((e) => {\r\n                        return (\r\n                          <option key={e.valuelist_id} value={e.valuelist_id}>\r\n                            {e.value}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n            \r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label> Description 3 </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.description3}\r\n                    name=\"description3\"\r\n                  >\r\n                    <option defaultValue=\"selected\">Please Select</option>\r\n                    {categoryLinked3 &&\r\n                      categoryLinked3.map((e) => {\r\n                        return (\r\n                          <option key={e.valuelist_id} value={e.valuelist_id}>\r\n                            {e.value}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label> Description 4 </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.description4}\r\n                    name=\"description4\"\r\n                  >\r\n                    <option defaultValue=\"selected\">Please Select</option>\r\n                    {categoryLinked4 &&\r\n                      categoryLinked4.map((e) => {\r\n                        return (\r\n                          <option key={e.valuelist_id} value={e.valuelist_id}>\r\n                            {e.value}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n             \r\n            </Row>\r\n            </ComponentCard>\r\n            <ComponentCard title=\"Gap Assesment\" >\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <Label>Gap</Label>\r\n                <FormGroup>\r\n                  <Label>Yes</Label>\r\n                  &nbsp;\r\n                  <Input\r\n                    name=\"gap\"\r\n                    value=\"1\"\r\n                    type=\"radio\"\r\n                    defaultChecked={contentDetails && contentDetails.gap === 1 && true}\r\n                    onChange={handleInputs}\r\n                  />\r\n                  &nbsp; &nbsp;\r\n                  <Label>No</Label>\r\n                  &nbsp;\r\n                  <Input\r\n                    name=\"gap\"\r\n                    value=\"0\"\r\n                    type=\"radio\"\r\n                    defaultChecked={contentDetails && contentDetails.gap === 0 && true}\r\n                    onChange={handleInputs}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n             \r\n                  <Col md=\"3\">\r\n                    <FormGroup>\r\n                      <Label> Indicate Your Action </Label> \r\n                      <Input\r\n                        type=\"text\"\r\n                        onChange={handleInputs}\r\n                        value={contentDetails && contentDetails.indicate_action}\r\n                        name=\"indicate_action\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <FormGroup>\r\n                      <Label> Requirements Implmented </Label> \r\n                      <Input\r\n                        type=\"text\"\r\n                        onChange={handleInputs}\r\n                        value={contentDetails && contentDetails.requirements_implemented}\r\n                        name=\"requirements_implemented\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n             \r\n            </Row>\r\n            </ComponentCard>\r\n            <ComponentCard title=\"Implementation\" >\r\n            <Row>\r\n             \r\n                  <Col md=\"3\">\r\n                    <FormGroup>\r\n                      <Label> Document Id </Label> \r\n                      <Input\r\n                        type=\"text\"\r\n                        onChange={handleInputs}\r\n                        value={contentDetails && contentDetails.document_id}\r\n                        name=\"document_id\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <FormGroup>\r\n                      <Label> Document Description </Label> \r\n                      <Input\r\n                        type=\"text\"\r\n                        onChange={handleInputs}\r\n                        value={contentDetails && contentDetails.document_description}\r\n                        name=\"document_description\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <FormGroup>\r\n                      <Label> Version </Label> \r\n                      <Input\r\n                        type=\"text\"\r\n                        onChange={handleInputs}\r\n                        value={contentDetails && contentDetails.version}\r\n                        name=\"version\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <FormGroup>\r\n                      <Label> Release Date </Label> \r\n                      <Input\r\n                        type=\"date\"\r\n                        onChange={handleInputs}\r\n                        value={contentDetails && contentDetails.release_date}\r\n                        name=\"release_date\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n             \r\n            </Row>\r\n            </ComponentCard>\r\n            <ComponentCard title=\"Off Site Assesment\" >\r\n            <Row>\r\n            \r\n             \r\n                  <Col md=\"3\">\r\n                    <FormGroup>\r\n                      <Label> Assessed </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        onChange={handleInputs}\r\n                        value={contentDetails && contentDetails.assessed}\r\n                        name=\"assessed\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <FormGroup>\r\n                      <Label> Acceptable </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        onChange={handleInputs}\r\n                        value={contentDetails && contentDetails.acceptable}\r\n                        name=\"acceptable\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <FormGroup>\r\n                      <Label> Remarks </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        onChange={handleInputs}\r\n                        value={contentDetails && contentDetails.remarks}\r\n                        name=\"remarks\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n             \r\n            </Row>\r\n            </ComponentCard>\r\n            <ComponentCard title=\"On Site Assesment\" >\r\n            <Row>\r\n            \r\n             \r\n                  <Col md=\"3\">\r\n                    <FormGroup>\r\n                      <Label> Assessed </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        onChange={handleInputs}\r\n                        value={contentDetails && contentDetails.onsite_assessed}\r\n                        name=\"onsite_assessed\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <FormGroup>\r\n                      <Label> Acceptable </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        onChange={handleInputs}\r\n                        value={contentDetails && contentDetails.onsite_acceptable}\r\n                        name=\"onsite_acceptable\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <FormGroup>\r\n                      <Label> Remarks </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        onChange={handleInputs}\r\n                        value={contentDetails && contentDetails.onsite_remarks}\r\n                        name=\"onsite_remarks\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n             \r\n            </Row>\r\n            </ComponentCard>\r\n          </ComponentCard>\r\n\r\n         \r\n        </FormGroup>\r\n      </Form>\r\n      {/* Picture and Attachments Form */}\r\n      <ComponentCard>\r\n      <Form>\r\n        <FormGroup>\r\n      \r\n\r\n\r\n            <TabContent className=\"p-4\" activeTab={activeTab}>\r\n          <Row>\r\n          <Nav tabs>   \r\n                        \r\n            <NavItem>\r\n              <NavLink\r\n                className={activeTab === '2' ? 'active' : ''}\r\n                onClick={() => {\r\n                  toggle('1');\r\n                }}\r\n              >\r\n                Attachments\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Row>\r\n     \r\n\r\n    \r\n        <TabPane tabId=\"1\">\r\n        <ComponentCard title=\"Attachments\">\r\n        <Row>\r\n              <Col xs=\"12\" md=\"3\" className=\"mb-3\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    dataForAttachment();\r\n                    setAttachmentModal(true);\r\n                  }}\r\n                >\r\n                  Add\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <AttachmentModalV2\r\n              moduleId={id}\r\n              roomName=\"ISO\"\r\n              altTagData=\"ISO Data\"\r\n              desc=\"ISO Data\"\r\n              modelType={attachmentData.modelType}\r\n              attachmentModal={attachmentModal}\r\n              setAttachmentModal={setAttachmentModal}\r\n            />\r\n            <ViewFileComponentV2 moduleId={id} roomName=\"ISO\" />\r\n          </ComponentCard>\r\n        </TabPane>\r\n      </TabContent>\r\n    \r\n        </FormGroup>\r\n      </Form>\r\n      </ComponentCard>\r\n    </>\r\n  );\r\n};\r\nexport default ContentUpdate;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","import { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pStyle = {\r\n  textAlign: 'right',\r\n  marginRight: '10px',\r\n};\r\nconst oStyle={\r\noutline:'none',\r\nborder:'none'\r\n};\r\n\r\nconst ComponentCardV2 = ({ children }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CardBody style={pStyle} >\r\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCardV2.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ComponentCardV2;\r\n","import React, { useState } from 'react';\r\nimport { FormGroup, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { FileUploader } from 'react-drag-drop-files';\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\n\r\nconst AttachmentModalV2 = ({ attachmentModal, setAttachmentModal, moduleId, quesId, roomName, fileTypes, altTagData, desc }) => {\r\n\r\n  AttachmentModalV2.propTypes = {\r\n    attachmentModal: PropTypes.bool,\r\n    setAttachmentModal: PropTypes.func,\r\n    moduleId: PropTypes.string,\r\n    quesId: PropTypes.any,\r\n    roomName: PropTypes.string,\r\n    altTagData: PropTypes.string,\r\n    desc: PropTypes.string,\r\n    fileTypes: PropTypes.any,\r\n  };\r\n  \r\n  console.log('Question ID in Modal:', quesId); // Debugging line\r\n\r\n  const [file, setFile] = useState([]);\r\n  const [handleValue, setHandleValue] = useState();\r\n  const [uploaded, setUploaded] = useState(null);\r\n\r\n  const handleChange = (files) => {\r\n    const arrayOfObj = Object.entries(files).map((e) => (e[1]));\r\n\r\n    setFile(files);\r\n    setHandleValue(arrayOfObj);\r\n    console.log(files);\r\n  };\r\n\r\n  const uploadFile = () => {\r\n    if (file) {\r\n      const data = new FormData();\r\n      const arrayOfObj = Object.entries(file).map((e) => (e[1]));\r\n\r\n      arrayOfObj.forEach((ele) => {\r\n        data.append('files', ele);\r\n      });\r\n      data.append('sub_category_id', quesId);\r\n      data.append('record_id', moduleId);\r\n      data.append('room_name', roomName);\r\n      data.append('alt_tag_data', altTagData);\r\n      data.append('description', desc);\r\n\r\n      api.post('/file/uploadFiles', data, {\r\n        onUploadProgress: (filedata) => {\r\n          console.log(Math.round((filedata.loaded / filedata.total) * 100));\r\n          setUploaded(Math.round((filedata.loaded / filedata.total) * 100));\r\n        }\r\n      }).then(() => {\r\n        message('Files Uploaded Successfully', 'success');\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 400);\r\n      }).catch(() => {\r\n        setAttachmentModal(false);\r\n        message('Unable to upload File', 'error');\r\n      });\r\n    } else {\r\n      message('No files selected', 'info');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={attachmentModal}>\r\n        <ModalHeader>Upload Media</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <FileUploader\r\n              multiple\r\n              handleChange={handleChange}\r\n              name=\"file\"\r\n              types={fileTypes}\r\n            />\r\n            {handleValue ? (\r\n              handleValue.map((e) => (\r\n                <div key={e.name}>\r\n                  <span>Name: {e.name}</span>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <span>No file selected</span>\r\n            )}\r\n          </FormGroup>\r\n          {uploaded && (\r\n            <div className=\"progress mt-2\">\r\n              <div className=\"progress-bar h-4\" role=\"progressbar\"\r\n                aria-valuenow={uploaded}\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                style={{ width: `${uploaded}%` }}>\r\n                {`${uploaded}% uploaded`}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" className=\"shadow-none\" onClick={uploadFile}>Upload</Button>\r\n          <Button color=\"secondary\" className=\"shadow-none\" onClick={() => { window.location.reload(); setAttachmentModal(false); }}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttachmentModalV2;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Icon from 'react-feather';\r\nimport message from '../Message';\r\nimport api from '../../constants/api';\r\n\r\nfunction ViewFileComponentV2({ moduleId, quesId,roomName,updateFile}) {\r\n  ViewFileComponentV2.propTypes = {\r\n    moduleId: PropTypes.string,\r\n    quesId: PropTypes.string,\r\n    roomName: PropTypes.string,\r\n    updateFile:PropTypes.bool,\r\n  };\r\n\r\n  const tableStyle = {};\r\n\r\n  const [getFile, setGetFile] = useState(null);\r\n\r\n  const getFiles = () => {\r\n    api\r\n      .post('/file/getListOfFiles', { record_id: moduleId,sub_category_id:quesId, room_name: roomName })\r\n      .then((res) => {\r\n        setGetFile(res.data);\r\n      })\r\n      .catch(() => {\r\n        message('Unable to fetch files', 'info');\r\n      });\r\n  };\r\n\r\n  const deleteFile = (fileId) => {\r\n     \r\n        api\r\n          .post('/file/deleteFile', { media_id: fileId })\r\n          .then(() => {\r\n            setGetFile((prevFiles) => prevFiles.filter((file) => file.media_id !== fileId));\r\n          })\r\n          .catch(() => {\r\n            message('Unable to Delete Media', 'info');\r\n          });\r\n      }\r\n      useEffect(() => {\r\n        getFiles();\r\n      }, [updateFile]); \r\n\r\n  useEffect(() => {\r\n    getFiles();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table style={tableStyle}>\r\n        <thead>\r\n          <tr style={tableStyle}>\r\n            <th style={tableStyle}>\r\n             File Name\r\n            </th>\r\n            <th width=\"5%\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {getFile ? (\r\n          getFile.map((res) => {\r\n            return (\r\n                <tr key={res.media_id}>\r\n                  <td style={tableStyle}>\r\n                      <a\r\n                        href={`https://isodemo.unitdtechnologies.com/storage/uploads/${res.name}`}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                      >\r\n                        {res.name}\r\n                      </a>\r\n                  </td>\r\n                  <td style={tableStyle}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn shadow-none\"\r\n                      onClick={() => {\r\n                        deleteFile(res.media_id);\r\n                      }}\r\n                    >\r\n                      <Icon.Trash2 />{' '}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n            );\r\n          })\r\n        ) : (\r\n          <tr><td><p>no files uploaded yet</p></td></tr>\r\n        )}\r\n        </tbody>\r\n        \r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewFileComponentV2;\r\n"],"sourceRoot":""}